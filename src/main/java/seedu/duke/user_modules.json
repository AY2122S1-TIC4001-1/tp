[{"moduleCode":"TIC1001","title":"Introduction to Computing and Programming I","description":"This module aims to (i) expose students to computing principles (including abstraction and composition), (ii) provide a broad introduction to key computing concepts (including computer organisation, operating systems, data management, distributed applications), and (iii) introduce students to basic programming methodologies and problem solving techniques through a simple structured programming language.","moduleCredit":4.0,"department":"SCALE Dean\u0027s Office","faculty":"Cont and Lifelong Education","preclusion":"TE2101, TEE2101","semesterData":[{"semester":1,"examDate":"Dec 1, 2020, 5:00:00 PM","examDuration":125}]},{"moduleCode":"TIC1002","title":"Introduction to Computing and Programming II","description":"This module builds on basic knowledge from TIC1001. Students will learn how to model a problem and how to design and implement solutions to computational problems. TIC1002 also introduces the methodologies and good practices of programming: testing, debugging, assertion, documentation, and tools such as linter, and debugger. Students will be exposed to more complex problems and learn to abstract out the complexities and to compose programmes from smaller, reusable components. Finally, students will be introduced to object-oriented programming paradigm as a powerful way of composing reusable components to form larger, more complex, programmes.","moduleCredit":4.0,"department":"SCALE Dean\u0027s Office","faculty":"Cont and Lifelong Education","prerequisite":"TIC1001","semesterData":[{"semester":2,"examDate":"Apr 27, 2021, 5:00:00 PM","examDuration":120}]},{"moduleCode":"TIC2001","title":"Data Structures and Algorithms","description":"This module introduces students to fundamental data structures, their implementation strategies, their algorithm design, and their applications. Data structures covered include linked lists, stacks, queues, hash tables, heap, trees, and graphs. This module also introduces the concepts of running time analysis and Big-O notation to quantify the performance of different implementation strategies and algorithms.","moduleCredit":4.0,"department":"SCALE Dean\u0027s Office","faculty":"Cont and Lifelong Education","prerequisite":"TIC1002","semesterData":[{"semester":1,"examDate":"Dec 1, 2020, 5:00:00 PM","examDuration":120}]}]